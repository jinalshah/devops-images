name: 'Container Image Builder'

description: 'Builder Container Images'

inputs:

  GIT_TAG_VERSION_MAJOR_MINOR:
    description: 'Major/Minor Version of the Image to Build'
    required: true
  GITLAB_CONTAINER_REGISTRY:
    description: 'GitLab DevOps Container Registry'
    required: true
  GITLAB_USERNAME:
    description: 'GitLab Username'
    required: true
  GITLAB_TOKEN:
    description: 'GitLab Token'
    required: true
  GCR_GITHUB_CONTAINER_REGISTRY:
    description: 'GitHub DevOps Container Registry'
    required: true
  GCR_GITHUB_USERNAME:
    description: 'GCR GitHub Username'
    required: true
  GCR_GITHUB_TOKEN:
    description: 'GCR GitHub Token'
    required: true
  DOCKERHUB_CONTAINER_REGISTRY:
    description: 'DockerHub DevOps Container Registry'
    required: true
  DOCKERHUB_USERNAME:
    description: 'DockerHub Username'
    required: true
  DOCKERHUB_TOKEN:
    description: 'DockerHub Token'
    required: true
  DOCKERFILE_TARGET:
    description: 'Dockerfile Target to build the appropriate image (i.e. aws-devops, gcp-devops or all-devops'
    required: true  
  PLATFORMS:
    description: 'Platforms to build the Container Images for ( i.e. linux/arm64,linux/amd64)'
    required: true  
# App Versions
  GCLOUD_VERSION:
    description: 'Google Cloud CLI Version'
    required: false
  PACKER_VERSION:
    description: 'Packer Version'
    required: false
  TERRAGRUNT_VERSION:
    description: 'Terragrunt Version'
    required: false
  TFLINT_VERSION:
    description: 'TFLint Version'
    required: false
  TFSEC_VERSION:
    description: 'TFSec Version'
    required: false
  GHORG_VERSION:
    description: 'Ghorg Version'
    required: false
  K9S_VERSION:
    description: 'K9S Version'
    required: false
  PYTHON_VERSION:
    description: 'Python Version'
    required: false
  PYTHON_VERSION_TO_USE:
    description: 'Specific Python Version to Use'
    required: false
  MONGODB_VERSION:
    description: 'MongoDB Version'
    required: false
  MONGODB_REPO_PATH:
    description: 'MongoDB Repository Path'
    required: false

runs:

  using: "composite"

  steps:

      - name: Set Environment Variables
        run: |
          echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
          echo "DEVOPS_IMAGE_VERSION=$(echo $GIT_TAG_VERSION_MAJOR_MINOR).$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
        shell: bash

      - name: Build Information
        run: |
          echo \*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
          echo BUILD INFORMATION:
          echo ------------------
          [ ! -z "$GITHUB_EVENT_NAME" ]     && echo "GitHub Event:            $GITHUB_EVENT_NAME"
          [ ! -z "$GITHUB_RUN_ID" ]         && echo "GitHub Run ID:           $GITHUB_RUN_ID"
          [ ! -z "$GITHUB_RUN_NUMBER" ]     && echo "GitHub Run No:           $GITHUB_RUN_NUMBER"
          [ ! -z "$GITHUB_SHA" ]            && echo "Commit SHA:              $GITHUB_SHA"
          [ ! -z "$SHORT_SHA" ]             && echo "Short SHA:               $SHORT_SHA"
          [ ! -z "$GITHUB_REPOSITORY" ]     && echo "Repo Name:               $GITHUB_REPOSITORY"
          [ ! -z "$GITHUB_REF" ]            && echo "Repo Ref:                $GITHUB_REF"
          [ ! -z "$GITHUB_HEAD_REF" ]       && echo "Head Branch:             $GITHUB_HEAD_REF"
          [ ! -z "$GITHUB_BASE_REF" ]       && echo "Base Branch:             $GITHUB_BASE_REF"
          [ ! -z "$RUNNER_NAME" ]           && echo "Runner Name:             $RUNNER_NAME"
          [ ! -z "$RUNNER_OS" ]             && echo "Runner OS:               $RUNNER_OS"
          [ ! -z "$DEVOPS_IMAGE_VERSION" ]  && echo "DevOps Image Version:    $DEVOPS_IMAGE_VERSION"
          echo \*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
        shell: bash

      - name: List App Versions
        run: |
            echo GCLOUD_VERSION=${{ inputs.GCLOUD_VERSION }}
            echo PACKER_VERSION=${{ inputs.PACKER_VERSION }}
            echo TERRAGRUNT_VERSION=${{ inputs.TERRAGRUNT_VERSION }}
            echo TFLINT_VERSION=${{ inputs.TFLINT_VERSION }}
            TFSEC_VERSION=${{ inputs.TFSEC_VERSION }}
            echo GHORG_VERSION=${{ inputs.GHORG_VERSION }}
            echo K9S_VERSION=${{ inputs.K9S_VERSION }}
            echo PYTHON_VERSION=${{ inputs.PYTHON_VERSION }}
            echo PYTHON_VERSION_TO_USE=${{ inputs.PYTHON_VERSION_TO_USE }}
            echo MONGODB_VERSION=${{ inputs.MONGODB_VERSION }}
            echo MONGODB_REPO_PATH=${{ inputs.MONGODB_REPO_PATH }}
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitLab Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ inputs.GITLAB_USERNAME }}
          password: ${{ inputs.GITLAB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ inputs.GCR_GITHUB_USERNAME }}
          password: ${{ inputs.GCR_GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.DOCKERHUB_USERNAME }}
          password: ${{ inputs.DOCKERHUB_TOKEN }}

      - name: Build and push - ${{ inputs.DOCKERFILE_TARGET }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.PLATFORMS }}
          target: ${{ inputs.DOCKERFILE_TARGET }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GCLOUD_VERSION=${{ inputs.GCLOUD_VERSION }}
            PACKER_VERSION=${{ inputs.PACKER_VERSION }}
            TERRAGRUNT_VERSION=${{ inputs.TERRAGRUNT_VERSION }}
            TFLINT_VERSION=${{ inputs.TFLINT_VERSION }}
            TFSEC_VERSION=${{ inputs.TFSEC_VERSION }}
            GHORG_VERSION=${{ inputs.GHORG_VERSION }}
            K9S_VERSION=${{ inputs.K9S_VERSION }}
            PYTHON_VERSION=${{ inputs.PYTHON_VERSION }}
            PYTHON_VERSION_TO_USE=${{ inputs.PYTHON_VERSION_TO_USE }}
            MONGODB_VERSION=${{ inputs.MONGODB_VERSION }}
            MONGODB_REPO_PATH=${{ inputs.MONGODB_REPO_PATH }}
          tags: |
            ${{ inputs.GITLAB_CONTAINER_REGISTRY }}/${{ inputs.DOCKERFILE_TARGET }}:latest
            ${{ inputs.GITLAB_CONTAINER_REGISTRY }}/${{ inputs.DOCKERFILE_TARGET }}:${{ env.DEVOPS_IMAGE_VERSION }}
            ${{ inputs.GCR_GITHUB_CONTAINER_REGISTRY }}/${{ inputs.DOCKERFILE_TARGET }}:latest
            ${{ inputs.GCR_GITHUB_CONTAINER_REGISTRY }}/${{ inputs.DOCKERFILE_TARGET }}:${{ env.DEVOPS_IMAGE_VERSION }}
            ${{ inputs.DOCKERHUB_CONTAINER_REGISTRY }}/${{ inputs.DOCKERFILE_TARGET }}:latest
            ${{ inputs.DOCKERHUB_CONTAINER_REGISTRY }}/${{ inputs.DOCKERFILE_TARGET }}:${{ env.DEVOPS_IMAGE_VERSION }}
          push: true