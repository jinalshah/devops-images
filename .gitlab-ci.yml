# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- docs
- build
- deploy
- test
variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DEVOPS_IMAGE_VERSION: 1.0.$CI_COMMIT_SHORT_SHA
  ALL_DEVOPS_IMAGE_NAME: "$CI_REGISTRY_IMAGE/all-devops"
  GHCR_ALL_DEVOPS_IMAGE_NAME: ghcr.io/jinalshah/devops/images/all-devops
  AWS_DEVOPS_IMAGE_NAME: "$CI_REGISTRY_IMAGE/aws-devops"
  GHCR_AWS_DEVOPS_IMAGE_NAME: ghcr.io/jinalshah/devops/images/aws-devops
  GCP_DEVOPS_IMAGE_NAME: "$CI_REGISTRY_IMAGE/gcp-devops"
  GHCR_GCP_DEVOPS_IMAGE_NAME: ghcr.io/jinalshah/devops/images/gcp-devops
  DOCKER_IMAGE: "$ALL_DEVOPS_IMAGE_NAME:latest"
all-devops-build-image:
  stage: build
  image:
    name: docker:latest
  services:
  - docker:dind
  only:
    refs:
    - branches
    - tags
    changes:
    - Dockerfile
    - "*.sh"
    - ".gitlab-ci.yml"
  except:
  - main
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
  - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
  script:
  - 'docker build --network host --target all-devops --pull -t $ALL_DEVOPS_IMAGE_NAME:latest
    -t $ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION -t $ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
    -t $GHCR_ALL_DEVOPS_IMAGE_NAME:latest -t $GHCR_ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    -t $GHCR_ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP .

    '
  - docker push $ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
  - docker push $GHCR_ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $GHCR_ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
all-devops-deploy-image:
  stage: deploy
  image:
    name: docker:latest
  services:
  - docker:dind
  only:
    refs:
    - main
    changes:
    - Dockerfile
    - "*.sh"
    - ".gitlab-ci.yml"
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
  - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
  script:
  - 'docker build --network host --target all-devops --pull -t $ALL_DEVOPS_IMAGE_NAME:latest  -t
    $ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION -t $ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
    -t $GHCR_ALL_DEVOPS_IMAGE_NAME:latest -t $GHCR_ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    -t $GHCR_ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP .

    '
  - docker push $ALL_DEVOPS_IMAGE_NAME:latest
  - docker push $ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
  - docker push $GHCR_ALL_DEVOPS_IMAGE_NAME:latest
  - docker push $GHCR_ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $GHCR_ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
aws-devops-build-image:
  stage: build
  image:
    name: docker:latest
  services:
  - docker:dind
  only:
    refs:
    - branches
    - tags
    changes:
    - Dockerfile
    - "*.sh"
    - ".gitlab-ci.yml"
  except:
  - main
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
  - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
  script:
  - 'docker build --network host --target aws-devops --pull -t $AWS_DEVOPS_IMAGE_NAME:latest
    -t $AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION -t $AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
    -t $GHCR_AWS_DEVOPS_IMAGE_NAME:latest -t $GHCR_AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    -t $GHCR_AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP .

    '
  - docker push $AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
  - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
aws-devops-deploy-image:
  stage: deploy
  image:
    name: docker:latest
  services:
  - docker:dind
  only:
    refs:
    - main
    changes:
    - Dockerfile
    - "*.sh"
    - ".gitlab-ci.yml"
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
  - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
  script:
  - 'docker build --network host --target aws-devops --pull -t $AWS_DEVOPS_IMAGE_NAME:latest  -t
    $AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION -t $AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
    -t $GHCR_AWS_DEVOPS_IMAGE_NAME:latest -t $GHCR_AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    -t $GHCR_AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP .

    '
  - docker push $AWS_DEVOPS_IMAGE_NAME:latest
  - docker push $AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
  - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:latest
  - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
gcp-devops-build-image:
  stage: build
  image:
    name: docker:latest
  services:
  - docker:dind
  only:
    refs:
    - branches
    - tags
    changes:
    - Dockerfile
    - "*.sh"
    - ".gitlab-ci.yml"
  except:
  - main
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
  - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
  script:
  - 'docker build --network host --target gcp-devops --pull -t $GCP_DEVOPS_IMAGE_NAME:latest
    -t $GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION -t $GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
    -t $GHCR_GCP_DEVOPS_IMAGE_NAME:latest -t $GHCR_GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    -t $GHCR_GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP .

    '
  - docker push $GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
  - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
gcp-devops-deploy-image:
  stage: deploy
  image:
    name: docker:latest
  services:
  - docker:dind
  only:
    refs:
    - main
    changes:
    - Dockerfile
    - "*.sh"
    - ".gitlab-ci.yml"
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
  - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
  script:
  - 'docker build --network host --target gcp-devops --pull -t $GCP_DEVOPS_IMAGE_NAME:latest  -t
    $GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION -t $GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
    -t $GHCR_GCP_DEVOPS_IMAGE_NAME:latest -t $GHCR_GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    -t $GHCR_GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP .

    '
  - docker push $GCP_DEVOPS_IMAGE_NAME:latest
  - docker push $GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
  - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:latest
  - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
  - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
include:
- template: Security/Container-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
image: python:latest
pages:
  stage: docs
  script:
  - pip install mkdocs-material
  - mkdocs build --site-dir public
  artifacts:
    paths:
    - public
  rules:
  - changes:
    - docs/**/*
    - mkdocs.yml
    - ".gitlab-ci.yml"
