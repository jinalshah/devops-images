# Change Running Order of Build Stages
stages:
  - docs
  - build
  - deploy
  - test

variables:
  DOCKER_TLS_CERTDIR: ""
  DEVOPS_IMAGE_VERSION: "1.0.$CI_COMMIT_SHORT_SHA"
  ALL_DEVOPS_IMAGE_NAME: "$CI_REGISTRY_IMAGE/all-devops"
  GHCR_ALL_DEVOPS_IMAGE_NAME: "ghcr.io/jinalshah/devops/images/all-devops"
  AWS_DEVOPS_IMAGE_NAME: "$CI_REGISTRY_IMAGE/aws-devops"
  GHCR_AWS_DEVOPS_IMAGE_NAME: "ghcr.io/jinalshah/devops/images/aws-devops"
  GCP_DEVOPS_IMAGE_NAME: "$CI_REGISTRY_IMAGE/gcp-devops"
  GHCR_GCP_DEVOPS_IMAGE_NAME: "ghcr.io/jinalshah/devops/images/gcp-devops"
  # Adding For Container Scanning
  DOCKER_IMAGE: $ALL_DEVOPS_IMAGE_NAME:latest
  # Adding for Multi-Arch builds
  BUILDX_VERSION: "v0.10.4"
  PLATFORMS: "linux/amd64,linux/arm64"

################################################################################
##                                                                            ##
##              ----==| A L L   D E V O P S   I M A G E |==----               ##
##                                                                            ##
################################################################################

#############################################################################################
all-devops-build-image:
  stage: build

  image: 
    name: docker:latest

  services:
    - docker:dind

  only:
    refs: 
      - branches
      - tags
    changes:
      - Dockerfile
      - "*.sh"
      - .gitlab-ci.yml

  except:
    - main

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
    - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
    - apk add --no-cache curl jq
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - export DOCKER_BUILDKIT=1
    - curl -fsSL https://github.com/docker/buildx/releases/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.linux-amd64 -o /usr/local/bin/docker-buildx
    - chmod a+x /usr/local/bin/docker-buildx
    - docker-buildx create --use

  script:
    - >
      docker-buildx build --platform $PLATFORMS --target all-devops --pull
      -t $ALL_DEVOPS_IMAGE_NAME:latest
      -t $ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
      -t $GHCR_ALL_DEVOPS_IMAGE_NAME:latest
      -t $GHCR_ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $GHCR_ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
      . --push
#############################################################################################



#############################################################################################
all-devops-deploy-image:
  stage: deploy

  image: 
    name: docker:latest

  services:
    - docker:dind

  only:
    refs:
      - main
    changes:
      - Dockerfile
      - "*.sh"
      - .gitlab-ci.yml

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
    - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)
    - apk add --no-cache curl jq
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - export DOCKER_BUILDKIT=1
    - curl -fsSL https://github.com/docker/buildx/releases/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.linux-amd64 -o /usr/local/bin/docker-buildx
    - chmod a+x /usr/local/bin/docker-buildx
    - docker-buildx create --use

  script:
    - >
      docker-buildx build --platform $PLATFORMS --target all-devops --pull
      -t $ALL_DEVOPS_IMAGE_NAME:latest 
      -t $ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
      -t $GHCR_ALL_DEVOPS_IMAGE_NAME:latest
      -t $GHCR_ALL_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $GHCR_ALL_DEVOPS_IMAGE_NAME:$TIMESTAMP
      . --push
#############################################################################################

################################################################################
##                                                                            ##
##                     ----==| A W S   I M A G E |==----                      ##
##                                                                            ##
################################################################################

#############################################################################################
aws-devops-build-image:
  stage: build

  image: 
    name: docker:latest

  services:
    - docker:dind

  only:
    refs: 
      - branches
      - tags
    changes:
      - Dockerfile
      - "*.sh"
      - .gitlab-ci.yml

  except:
    - main

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
    - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)

  script:
    - >
      docker build --network host --target aws-devops --pull
      -t $AWS_DEVOPS_IMAGE_NAME:latest
      -t $AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
      -t $GHCR_AWS_DEVOPS_IMAGE_NAME:latest
      -t $GHCR_AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $GHCR_AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
      .
    - docker push $AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    - docker push $AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
    - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
#############################################################################################



#############################################################################################
aws-devops-deploy-image:
  stage: deploy

  image: 
    name: docker:latest

  services:
    - docker:dind

  only:
    refs:
      - main
    changes:
      - Dockerfile
      - "*.sh"
      - .gitlab-ci.yml

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
    - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)

  script:
    - >
      docker build --network host --target aws-devops --pull
      -t $AWS_DEVOPS_IMAGE_NAME:latest 
      -t $AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
      -t $GHCR_AWS_DEVOPS_IMAGE_NAME:latest
      -t $GHCR_AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $GHCR_AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
      .
    - docker push $AWS_DEVOPS_IMAGE_NAME:latest 
    - docker push $AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    - docker push $AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
    - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:latest
    - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    - docker push $GHCR_AWS_DEVOPS_IMAGE_NAME:$TIMESTAMP
#############################################################################################

################################################################################
##                                                                            ##
##                     ----==| G C P   I M A G E |==----                      ##
##                                                                            ##
################################################################################

#############################################################################################
gcp-devops-build-image:
  stage: build

  image: 
    name: docker:latest

  services:
    - docker:dind

  only:
    refs: 
      - branches
      - tags
    changes:
      - Dockerfile
      - "*.sh"
      - .gitlab-ci.yml

  except:
    - main

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
    - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)

  script:
    - >
      docker build --network host --target gcp-devops --pull
      -t $GCP_DEVOPS_IMAGE_NAME:latest
      -t $GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
      -t $GHCR_GCP_DEVOPS_IMAGE_NAME:latest
      -t $GHCR_GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $GHCR_GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
      .
    - docker push $GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    - docker push $GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
    - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
#############################################################################################



#############################################################################################
gcp-devops-deploy-image:
  stage: deploy

  image: 
    name: docker:latest

  services:
    - docker:dind

  only:
    refs:
      - main
    changes:
      - Dockerfile
      - "*.sh"
      - .gitlab-ci.yml

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo $GHCR_PASSWORD | docker login ghcr.io --username "GHCR_USER" --password-stdin
    - export TIMESTAMP=$(date +%Y%m%d-%H%M%S)

  script:
    - >
      docker build --network host --target gcp-devops --pull
      -t $GCP_DEVOPS_IMAGE_NAME:latest 
      -t $GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
      -t $GHCR_GCP_DEVOPS_IMAGE_NAME:latest
      -t $GHCR_GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
      -t $GHCR_GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
      .
    - docker push $GCP_DEVOPS_IMAGE_NAME:latest 
    - docker push $GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    - docker push $GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
    - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:latest
    - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:$DEVOPS_IMAGE_VERSION
    - docker push $GHCR_GCP_DEVOPS_IMAGE_NAME:$TIMESTAMP
#############################################################################################

# Container Scanning
include:
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST-IaC.latest.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml

################################################################################
##                                                                            ##
##      ----==| P I P E L I N E   T O   P U B L I S H   D O C S |==----       ##
##                                                                            ##
################################################################################

image: python:latest
pages:
  stage: docs
  script:
    - pip install mkdocs-material
    - mkdocs build --site-dir public
  artifacts:
    paths:
      - public
  rules:
    - changes:
        - docs/**/*
        - mkdocs.yml
        - .gitlab-ci.yml
