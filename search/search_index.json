{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"<p>This repository contains all the common DevOps tooling required for a typical project on AWS or GCP.</p> <p>There are three types of DevOps Images available for use:</p> <ul> <li>All-DevOps: Contains tools for both AWS and GCP environments.</li> <li>AWS-DevOps: Contains tools for AWS environments.</li> <li>GCP-DevOps: Contains tools for GCP environments.</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#all-devops-image","title":"All DevOps Image","text":""},{"location":"#all-devops-github-container-registry","title":"All DevOps: GitHub Container Registry","text":"<p>Pull the Image:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/all-devops:latest\n</code></pre> <p>Run the Image:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/all-devops:latest zsh\n</code></pre>"},{"location":"#aws-devops-image","title":"AWS DevOps Image","text":""},{"location":"#aws-devops-github-container-registry","title":"AWS DevOps: GitHub Container Registry","text":"<p>Pull the Image:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/aws-devops:latest\n</code></pre> <p>Run the Image:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/aws-devops:latest zsh\n</code></pre>"},{"location":"#gcp-devops-image","title":"GCP DevOps Image","text":""},{"location":"#gcp-devops-github-container-registry","title":"GCP DevOps: GitHub Container Registry","text":"<p>Pull the Image:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/gcp-devops:latest\n</code></pre> <p>Run the Image:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/gcp-devops:latest zsh\n</code></pre>"},{"location":"#how-to-use-tools-without-accessing-the-container","title":"How to Use Tools Without Accessing the Container","text":"<p>See Using Tools Without Accessing the Container Shell for tips on running tools directly from the images, without needing to open an interactive shell.</p>"},{"location":"#contributing-to-documentation","title":"Contributing to Documentation","text":"<p>If you notice outdated or missing information, contributions are welcome! Edit the relevant Markdown files in the <code>docs/</code> directory and submit a pull request.</p>"},{"location":"#support-feature-requests","title":"Support &amp; Feature Requests","text":"<p>For issues, feature requests, or to request new tools in the images, please open an issue on the repository.</p>"},{"location":"#registries","title":"Registries","text":"<p>Images are available on both GitHub and GitLab Container Registries. See the Using the DevOps Images section for full details.</p>"},{"location":"#more-information","title":"More Information","text":"<ul> <li>Building Images</li> <li>Troubleshooting</li> <li>Using Images</li> </ul>"},{"location":"reading-the-docs/","title":"Reading The Docs","text":""},{"location":"reading-the-docs/#reading-the-documentation","title":"Reading the Documentation","text":"<p>There are several ways to access the documentation. The options have been listed below.</p>"},{"location":"reading-the-docs/#on-the-web","title":"On the Web","text":"<p>The documentation can be directly viewed on your browser:</p> <p>https://jinalshah.github.io/devops-images/</p>"},{"location":"reading-the-docs/#locally-on-your-machine-to-preview-as-you-write","title":"Locally on your machine (To Preview as you Write)","text":""},{"location":"reading-the-docs/#reading-the-documentation-via-your-host-machine","title":"Reading the Documentation via your Host Machine","text":"<p>Ensure you are at the root of this repository.</p> <p>Ensure <code>mkdocs</code> is installed on your machine. If not, you can install it using: <code>python3 -m pip install --upgrade mkdocs-material</code></p> <pre><code>mkdocs serve\n</code></pre> <p>Then access the documentation on your browser by visiting:</p> <p>http://localhost:8000</p>"},{"location":"reading-the-docs/#reading-the-documentation-via-docker","title":"Reading the Documentation via Docker","text":""},{"location":"reading-the-docs/#option-1","title":"Option 1","text":"<p>Ensure you are at the root of this repository.</p> <p>Start a container:</p> <pre><code>docker run -it --name devops-images-docs -v $PWD:/srv -p 8000:8000 ghcr.io/jinalshah/devops/images/all-devops\n</code></pre> <p>Navigate to the /srv directory on the container (where the root of this repository is mapped):</p> <pre><code>cd /srv\n</code></pre> <p>Serve the Documents so that they are accessible from your Host Machine:</p> <pre><code>mkdocs serve -a 0.0.0.0:8000\n</code></pre> <p>Then access the documentation on your browser by visiting:</p> <p>http://localhost:8000</p>"},{"location":"reading-the-docs/#option-2","title":"Option 2","text":"<p>Ensure you are at the root of this repository.</p> <pre><code>docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material\n</code></pre> <p>Then access the documentation on your browser by visiting:</p> <p>http://localhost:8000</p>"},{"location":"reading-the-docs/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>If you encounter a port conflict on 8000, either stop the conflicting service or use <code>mkdocs serve -a 0.0.0.0:8080</code> and visit http://localhost:8080.</li> <li>Ensure Docker is running if using the Docker method.</li> <li>For any issues, please open an issue on the repository.</li> </ul>"},{"location":"reading-the-docs/#contributing-to-documentation","title":"Contributing to Documentation","text":"<p>If you spot outdated or missing information, please edit the relevant Markdown files in the <code>docs/</code> directory and submit a pull request.</p>"},{"location":"build-images/","title":"Building the DevOps Images","text":"<p>The following guides describe how to build the images locally on your own machine/host. This is especially useful should you need to modify the Dockerfile for your own needs.</p> <p>For example, if you want to install a specific tool that's currently missing from the existing image, simply clone this repository, modify the Dockerfile as necessary, and build the image locally.</p>"},{"location":"build-images/#step-by-step-build-instructions","title":"Step-by-Step Build Instructions","text":"<ol> <li>Clone this repository:</li> </ol> <p><code>bash    git clone https://github.com/jinalshah/devops-images.git    cd devops-images</code></p> <ol> <li> <p>Modify the <code>Dockerfile</code> as needed.</p> </li> <li> <p>Build the image (replace <code>&lt;image-name&gt;</code> as appropriate):</p> </li> </ol> <p><code>bash    docker build -t &lt;image-name&gt;:latest .</code></p> <ol> <li>Run the image:</li> </ol> <p><code>bash    docker run -it &lt;image-name&gt;:latest zsh</code></p>"},{"location":"build-images/#advanced-multi-platform-builds","title":"Advanced: Multi-Platform Builds","text":"<p>To build for multiple platforms (e.g., ARM and x86), use Docker Buildx:</p> <pre><code>docker buildx build --platform linux/amd64,linux/arm64 -t &lt;image-name&gt;:latest .\n</code></pre>"},{"location":"build-images/#caching-and-build-args","title":"Caching and Build Args","text":"<ul> <li>The build process uses caching to speed up builds. You can clear the cache with <code>docker builder prune</code> if needed.</li> <li>You can pass build arguments using <code>--build-arg</code> if the Dockerfile supports them.</li> </ul>"},{"location":"build-images/#troubleshooting","title":"Troubleshooting","text":"<p>See the Troubleshooting section for common build issues.</p>"},{"location":"build-images/all-devops/","title":"All DevOps","text":""},{"location":"build-images/all-devops/#building-and-running-the-image","title":"Building and Running the Image","text":""},{"location":"build-images/all-devops/#building-the-image-locally","title":"Building the Image Locally","text":""},{"location":"build-images/all-devops/#clone-the-repository","title":"Clone the Repository","text":"<pre><code>git clone git@gitlab.com:jinal-shah/devops/images.git\n</code></pre>"},{"location":"build-images/all-devops/#cd-into-the-directory","title":"cd into the directory","text":"<pre><code>cd images\n</code></pre>"},{"location":"build-images/all-devops/#build-the-image","title":"Build the Image","text":"<pre><code>docker build --target all-devops -t all-devops:latest .\n</code></pre>"},{"location":"build-images/all-devops/#running-the-locally-built-image","title":"Running the Locally Built Image","text":"<pre><code>docker run -it all-devops:latest\n</code></pre>"},{"location":"build-images/aws-devops/","title":"AWS DevOps","text":""},{"location":"build-images/aws-devops/#building-and-running-the-image","title":"Building and Running the Image","text":""},{"location":"build-images/aws-devops/#building-the-image-locally","title":"Building the Image Locally","text":""},{"location":"build-images/aws-devops/#clone-the-repository","title":"Clone the Repository","text":"<pre><code>git clone git@gitlab.com:jinal-shah/devops/images.git\n</code></pre>"},{"location":"build-images/aws-devops/#cd-into-the-directory","title":"cd into the directory","text":"<pre><code>cd images\n</code></pre>"},{"location":"build-images/aws-devops/#build-the-image","title":"Build the Image","text":"<pre><code>docker build --target aws-devops -t aws-devops:latest .\n</code></pre>"},{"location":"build-images/aws-devops/#running-the-locally-built-image","title":"Running the Locally Built Image","text":"<pre><code>docker run -it aws-devops:latest\n</code></pre>"},{"location":"build-images/gcp-devops/","title":"GCP DevOps","text":""},{"location":"build-images/gcp-devops/#building-and-running-the-image","title":"Building and Running the Image","text":""},{"location":"build-images/gcp-devops/#building-the-image-locally","title":"Building the Image Locally","text":""},{"location":"build-images/gcp-devops/#clone-the-repository","title":"Clone the Repository","text":"<pre><code>git clone git@gitlab.com:jinal-shah/devops/images.git\n</code></pre>"},{"location":"build-images/gcp-devops/#cd-into-the-directory","title":"cd into the directory","text":"<pre><code>cd images\n</code></pre>"},{"location":"build-images/gcp-devops/#build-the-image","title":"Build the Image","text":"<pre><code>docker build --target gcp-devops -t gcp-devops:latest .\n</code></pre>"},{"location":"build-images/gcp-devops/#running-the-locally-built-image","title":"Running the Locally Built Image","text":"<pre><code>docker run -it gcp-devops:latest\n</code></pre>"},{"location":"build-images/multi-platform-images/","title":"Multi-platform Images","text":"<p>The following guides describe how to Build the Images for Multiple Platforms. This is especially useful should you need to use the Image ond AMD64 and/or ARM64 architectures.</p> <p>The examples here use a full registry details in the path as an example because the <code>build</code> tool currently has a limitation where it can't build multi-platform Images locally. The registry paths can be modified to suit your needs. They show how to build images for both GitLab and GitHub Container Registries.</p>"},{"location":"build-images/multi-platform-images/#multi-platform-builds","title":"Multi-platform Builds","text":""},{"location":"build-images/multi-platform-images/#export-the-relevant-variables","title":"Export the Relevant Variables","text":"<pre><code>export PLATFORMS=\"linux/arm64,linux/amd64\"\nexport ALL_DEVOPS_IMAGE_NAME=\"ghcr.io/jinalshah/devops/images/all-devops\"\nexport GHCR_ALL_DEVOPS_IMAGE_NAME=\"ghcr.io/jinalshah/devops/images/all-devops\"\nexport AWS_DEVOPS_IMAGE_NAME=\"ghcr.io/jinalshah/devops/images/aws-devops\"\nexport GHCR_AWS_DEVOPS_IMAGE_NAME=\"ghcr.io/jinalshah/devops/images/aws-devops\"\nexport GCP_DEVOPS_IMAGE_NAME=\"ghcr.io/jinalshah/devops/images/gcp-devops\"\nexport GHCR_GCP_DEVOPS_IMAGE_NAME=\"ghcr.io/jinalshah/devops/images/gcp-devops\"\nexport TIMESTAMP=$(date +%Y%m%d-%H%M%S)\nexport DEVOPS_IMAGE_VERSION=\"1.0.$TIMESTAMP\"\n</code></pre>"},{"location":"build-images/multi-platform-images/#use-the-buildx-tool-to-build-the-images","title":"Use the buildx tool to build the images","text":"<p>Activate the use of buildx</p> <pre><code>docker buildx create --use\n</code></pre>"},{"location":"build-images/multi-platform-images/#build-the-all-devops-image","title":"Build the All DevOps Image","text":"<pre><code>docker buildx build --platform $PLATFORMS --target all-devops --pull \\\n-t $ALL_DEVOPS_IMAGE_NAME\\:latest \\\n-t $ALL_DEVOPS_IMAGE_NAME\\:$DEVOPS_IMAGE_VERSION \\\n-t $ALL_DEVOPS_IMAGE_NAME\\:$TIMESTAMP \\\n-t $GHCR_ALL_DEVOPS_IMAGE_NAME\\:latest \\\n-t $GHCR_ALL_DEVOPS_IMAGE_NAME\\:$DEVOPS_IMAGE_VERSION \\\n-t $GHCR_ALL_DEVOPS_IMAGE_NAME\\:$TIMESTAMP \\\n--push .\n</code></pre>"},{"location":"build-images/multi-platform-images/#build-the-aws-devops-image","title":"Build the AWS DevOps Image","text":"<pre><code>docker buildx build --platform $PLATFORMS --target aws-devops --pull \\\n-t $AWS_DEVOPS_IMAGE_NAME\\:latest \\\n-t $AWS_DEVOPS_IMAGE_NAME\\:$DEVOPS_IMAGE_VERSION \\\n-t $AWS_DEVOPS_IMAGE_NAME\\:$TIMESTAMP \\\n-t $GHCR_AWS_DEVOPS_IMAGE_NAME\\:latest \\\n-t $GHCR_AWS_DEVOPS_IMAGE_NAME\\:$DEVOPS_IMAGE_VERSION \\\n-t $GHCR_AWS_DEVOPS_IMAGE_NAME\\:$TIMESTAMP \\\n--push .\n</code></pre>"},{"location":"build-images/multi-platform-images/#build-the-gcp-devops-image","title":"Build the GCP DevOps Image","text":"<pre><code>docker buildx build --platform $PLATFORMS --target gcp-devops --pull \\\n-t $GCP_DEVOPS_IMAGE_NAME\\:latest \\\n-t $GCP_DEVOPS_IMAGE_NAME\\:$DEVOPS_IMAGE_VERSION \\\n-t $GCP_DEVOPS_IMAGE_NAME\\:$TIMESTAMP \\\n-t $GHCR_GCP_DEVOPS_IMAGE_NAME\\:latest \\\n-t $GHCR_GCP_DEVOPS_IMAGE_NAME\\:$DEVOPS_IMAGE_VERSION \\\n-t $GHCR_GCP_DEVOPS_IMAGE_NAME\\:$TIMESTAMP \\\n--push .\n</code></pre>"},{"location":"troubleshooting/","title":"Known Issues and Troubleshooting","text":""},{"location":"troubleshooting/#known-issues","title":"Known Issues","text":""},{"location":"troubleshooting/#issue-with-source-zshrc-on-builds","title":"Issue with <code>source ~/.zshrc</code> on builds","text":"<p>If you run the command <code>source ~/.zshrc</code> within the Dockerfile it fails.</p> <p>This is due to the build/shell throwing an error when one \"source\" command calls another \"source\" (i.e. a nested source) within a file.</p>"},{"location":"troubleshooting/#workaround-examples","title":"Workaround examples","text":""},{"location":"troubleshooting/#temporarily-disable-and-re-enable-zshoh-my-zshsh-from-zshrc","title":"Temporarily Disable and Re-enable <code>$ZSH/oh-my-zsh.sh</code> from <code>~/.zshrc</code>","text":"<p>Comment Source Lines in <code>~/.zshrc</code>:</p> <pre><code>sed -i 's/# source $ZSH\\/oh-my-zsh.sh/source $ZSH\\/oh-my-zsh.sh/g' ~/.zshrc\n</code></pre> <p>Uncomment Source Lines in <code>~/.zshrc</code> on all stage builds:</p> <pre><code>sed -i 's/# source &lt;(kubectl completion zsh)/source &lt;(kubectl completion zsh)/g' ~/.zshrc &amp;&amp; \\\n  sed -i 's/# source &lt;(kubectl completion zsh)/source &lt;(kubectl completion zsh)/g' ~/.bashrc &amp;&amp; \\\n  sed -i 's/# source $ZSH\\/oh-my-zsh.sh/source $ZSH\\/oh-my-zsh.sh/g' ~/.zshrc\n</code></pre>"},{"location":"troubleshooting/#common-docker-build-issues","title":"Common Docker Build Issues","text":"<ul> <li>Permission denied errors:</li> <li>Ensure you have the correct permissions on files and directories being copied into the image.</li> <li>Use <code>chmod</code> or <code>chown</code> as needed in your Dockerfile.</li> <li>Network issues during build:</li> <li>Retry the build; sometimes network hiccups cause package install failures.</li> <li>Check your internet connection or proxy settings.</li> <li>Build cache not updating:</li> <li>Use <code>--no-cache</code> with <code>docker build</code> to force a fresh build.</li> </ul>"},{"location":"troubleshooting/#need-more-help","title":"Need More Help?","text":"<p>If you encounter an issue not listed here, please open an issue on the repository with details and steps to reproduce.</p>"},{"location":"use-images/","title":"Using the DevOps Images","text":"<p>There are three types of DevOps Images available for use:</p> <ul> <li>All-DevOps: Contains tools for both AWS and GCP environments.</li> <li>AWS-DevOps: Contains tools for AWS environments.</li> <li>GCP-DevOps: Contains tools for GCP environments.</li> </ul> <p>All images come equipped with certain universal tools such as:</p> <ul> <li>Ansible</li> <li>Python 3.X</li> <li>SSH</li> <li>DNS tools (dig, nslookup)</li> <li>Network tools (ncat, telnet)</li> <li>vim</li> </ul> <p>Additional details on what the images contain can be found within the Dockerfile.</p> <p>The images are available on the GitLab Container Registry and the GitHub Container Registry. The links to both registries have been listed below:</p> Image Type GitLab Container Registry GitHub Container Registry All DevOps jinal-shah/devops/images/all-devops devops/images/all-devops AWS DevOps jinal-shah/devops/images/aws-devops devops/images/aws-devops GCP DevOps jinal-shah/devops/images/gcp-devops devops/images/gcp-devops"},{"location":"use-images/#updating-images","title":"Updating Images","text":"<p>To pull the latest version of any image:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/all-devops:latest\n</code></pre> <p>Replace <code>all-devops</code> with <code>aws-devops</code> or <code>gcp-devops</code> as needed.</p>"},{"location":"use-images/#using-with-docker-compose","title":"Using with Docker Compose","text":"<p>You can use these images as a base in your own <code>docker-compose.yml</code> files. Example:</p> <pre><code>services:\n  devops:\n    image: ghcr.io/jinalshah/devops/images/all-devops:latest\n    command: zsh\n    volumes:\n      - ./:/workspace\n</code></pre>"},{"location":"use-images/#customising-containers","title":"Customising Containers","text":"<p>To add your own tools or configuration, extend the image in your own Dockerfile:</p> <pre><code>FROM ghcr.io/jinalshah/devops/images/all-devops:latest\nRUN pip install &lt;your-tool&gt;\n</code></pre>"},{"location":"use-images/#registry-notes","title":"Registry Notes","text":"<ul> <li>The GitHub Container Registry is recommended for most users.</li> <li>The GitLab Container Registry is provided for compatibility and redundancy.</li> </ul>"},{"location":"use-images/#using-tools-without-accessing-the-container-shell","title":"Using Tools Without Accessing the Container Shell","text":"<p>You do not need to open an interactive shell to use the tools provided in these images. You can run any tool directly using <code>docker run</code> with the desired command. This is useful for scripting, automation, or CI/CD pipelines.</p>"},{"location":"use-images/#examples","title":"Examples","text":""},{"location":"use-images/#run-a-tool-directly","title":"Run a Tool Directly","text":"<pre><code>docker run --rm ghcr.io/jinalshah/devops/images/all-devops:latest ansible --version\ndocker run --rm ghcr.io/jinalshah/devops/images/aws-devops:latest aws --version\ndocker run --rm ghcr.io/jinalshah/devops/images/gcp-devops:latest gcloud --version\ndocker run --rm ghcr.io/jinalshah/devops/images/all-devops:latest dig google.com\ndocker run --rm ghcr.io/jinalshah/devops/images/all-devops:latest nslookup google.com\ndocker run --rm ghcr.io/jinalshah/devops/images/all-devops:latest ncat --version\ndocker run --rm ghcr.io/jinalshah/devops/images/all-devops:latest ncat google.com 80\n</code></pre>"},{"location":"use-images/#run-a-tool-on-local-files-mount-a-volume","title":"Run a Tool on Local Files (Mount a Volume)","text":"<p>If you want to operate on files from your host, mount a directory:</p> <pre><code>docker run --rm -v $(pwd):/workspace ghcr.io/jinalshah/devops/images/all-devops:latest ansible-playbook /workspace/playbook.yml\n</code></pre>"},{"location":"use-images/#use-in-scripts-or-cicd","title":"Use in Scripts or CI/CD","text":"<p>You can use these images in your automation scripts or CI/CD pipelines to run tools in a consistent environment, without needing to install them locally.</p>"},{"location":"use-images/#running-tools-on-local-files-mounted-to-srv","title":"Running Tools on Local Files Mounted to /srv","text":"<p>You can also mount your current working directory to <code>/srv</code> in the container. This is useful if you want to follow a convention or if some tools/scripts expect files in <code>/srv</code>.</p>"},{"location":"use-images/#example","title":"Example","text":"<pre><code>docker run --rm -v \"$(pwd)\":/srv ghcr.io/jinalshah/devops/images/all-devops:latest ansible-playbook /srv/playbook.yml\n</code></pre> <p>Replace <code>playbook.yml</code> with your file or script as needed. This approach works for any tool in the image.</p>"},{"location":"use-images/#passing-environment-variables","title":"Passing Environment Variables","text":"<p>You can pass environment variables from your host to the container using the <code>-e</code> flag. This is useful for credentials and configuration:</p> <pre><code>docker run --rm -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY ghcr.io/jinalshah/devops/images/aws-devops:latest aws s3 ls\n</code></pre> <p>You can also use <code>--env-file</code> to pass multiple variables from a file.</p>"},{"location":"use-images/#mounting-authentication-directories","title":"Mounting Authentication Directories","text":"<p>To use your existing AWS, GCP, or SSH credentials inside the container, mount the relevant directories from your host:</p> <ul> <li>AWS CLI:</li> </ul> <p><code>bash   docker run --rm -v ~/.aws:/root/.aws ghcr.io/jinalshah/devops/images/aws-devops:latest aws s3 ls</code></p> <ul> <li>Google Cloud SDK:</li> </ul> <p><code>bash   docker run --rm -v ~/.config/gcloud:/root/.config/gcloud ghcr.io/jinalshah/devops/images/gcp-devops:latest gcloud auth list</code></p> <ul> <li>SSH Keys:</li> </ul> <p><code>bash   docker run --rm -v ~/.ssh:/root/.ssh ghcr.io/jinalshah/devops/images/all-devops:latest ssh user@host</code></p> <p>Tip: You can combine multiple <code>-v</code> flags to mount several directories at once.</p>"},{"location":"use-images/#troubleshooting-common-docker-issues","title":"Troubleshooting Common Docker Issues","text":"<ul> <li>File Permissions: Files created by the container may be owned by root. Use the <code>--user $(id -u):$(id -g)</code> flag to run as your user:</li> </ul> <p><code>bash   docker run --rm --user $(id -u):$(id -g) -v $(pwd):/workspace ghcr.io/jinalshah/devops/images/all-devops:latest touch /workspace/test.txt</code></p> <ul> <li>Networking: If you have trouble accessing the internet or internal resources, check your Docker network settings.</li> <li>Volume Mounts on macOS/Windows: Ensure the path syntax is correct and that Docker Desktop has access to your files.</li> </ul>"},{"location":"use-images/#example-using-in-github-actions-or-cicd","title":"Example: Using in GitHub Actions or CI/CD","text":"<p>You can use these images in your CI/CD pipelines. Example for GitHub Actions:</p> <pre><code>jobs:\n  deploy:\n    runs-on: ubuntu-latest\n    container:\n      image: ghcr.io/jinalshah/devops/images/all-devops:latest\n    steps:\n      - uses: actions/checkout@v3\n      - run: ansible --version\n</code></pre>"},{"location":"use-images/#support-feature-requests","title":"Support &amp; Feature Requests","text":"<p>For issues, feature requests, or to request new tools in the images, please open an issue on the repository.</p> <p>For more details, see the Getting Started and Building Images sections.</p>"},{"location":"use-images/all-devops/","title":"All DevOps","text":""},{"location":"use-images/all-devops/#devops-image","title":"DevOps Image","text":""},{"location":"use-images/all-devops/#all-devops-image","title":"All DevOps Image","text":""},{"location":"use-images/all-devops/#all-devops-gitlab-container-registry","title":"All DevOps: GitLab Container Registry","text":"<p>Pull the Image from the GitLab Container Registry:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/all-devops:latest\n</code></pre> <p>Run the Image from the GitLab Container Registry:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/all-devops:latest zsh\n</code></pre>"},{"location":"use-images/all-devops/#all-devops-github-container-registry","title":"All DevOps: GitHub Container Registry","text":"<p>Pull the Image from the GitHub Container Registry:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/all-devops:latest\n</code></pre> <p>Run the Image from the GitHub Container Registry:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/all-devops:latest zsh\n</code></pre>"},{"location":"use-images/aws-devops/","title":"AWS DevOps","text":""},{"location":"use-images/aws-devops/#devops-image","title":"DevOps Image","text":""},{"location":"use-images/aws-devops/#aws-devops-image","title":"AWS DevOps Image","text":""},{"location":"use-images/aws-devops/#aws-devops-gitlab-container-registry","title":"AWS DevOps: GitLab Container Registry","text":"<p>Pull the Image from the GitLab Container Registry:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/aws-devops:latest\n</code></pre> <p>Run the Image from the GitLab Container Registry:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/aws-devops:latest zsh\n</code></pre>"},{"location":"use-images/aws-devops/#aws-devops-github-container-registry","title":"AWS DevOps: GitHub Container Registry","text":"<p>Pull the Image from the GitHub Container Registry:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/aws-devops:latest\n</code></pre> <p>Run the Image from the GitHub Container Registry:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/aws-devops:latest zsh\n</code></pre>"},{"location":"use-images/gcp-devops/","title":"GCP DevOps","text":""},{"location":"use-images/gcp-devops/#devops-image","title":"DevOps Image","text":""},{"location":"use-images/gcp-devops/#gcp-devops-image","title":"GCP DevOps Image","text":""},{"location":"use-images/gcp-devops/#gcp-devops-gitlab-container-registry","title":"GCP DevOps: GitLab Container Registry","text":"<p>Pull the Image from the GitLab Container Registry:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/gcp-devops:latest\n</code></pre> <p>Run the Image from the GitLab Container Registry:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/gcp-devops:latest zsh\n</code></pre>"},{"location":"use-images/gcp-devops/#gcp-devops-github-container-registry","title":"GCP DevOps: GitHub Container Registry","text":"<p>Pull the Image from the GitHub Container Registry:</p> <pre><code>docker pull ghcr.io/jinalshah/devops/images/gcp-devops:latest\n</code></pre> <p>Run the Image from the GitHub Container Registry:</p> <pre><code>docker run -it ghcr.io/jinalshah/devops/images/gcp-devops:latest zsh\n</code></pre>"}]}